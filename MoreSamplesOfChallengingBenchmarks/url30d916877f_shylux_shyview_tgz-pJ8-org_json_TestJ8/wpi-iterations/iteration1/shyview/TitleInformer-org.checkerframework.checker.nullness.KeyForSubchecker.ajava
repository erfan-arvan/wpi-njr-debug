package shyview;

import java.awt.Frame;
import java.util.NoSuchElementException;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class TitleInformer implements IPicInfo {

    private static final  String NOPICTURES = "No pictures available";

    @org.checkerframework.dataflow.qual.SideEffectFree
    private TitleInformer() {
    }

    private static  TitleInformer _instance;

    @org.checkerframework.dataflow.qual.Impure
    public static  TitleInformer getInstance() {
        if (_instance == null)
            _instance = new TitleInformer();
        return _instance;
    }

     Frame window;

     String startTitle;

     String listName;

      int listSize;

      int picPosition;

     String picName;

     String process;

    @org.checkerframework.dataflow.qual.Impure
    public void setFrame( TitleInformer this,  Frame fr) {
        window = fr;
        startTitle = window.getTitle();
    }

    @org.checkerframework.dataflow.qual.Impure
    private void redraw( TitleInformer this) {
        StringBuilder title = new StringBuilder();
        title.append(startTitle + " - ");
        if (listName != null && picName != null) {
            title.append(picPosition + "/" + listSize);
            title.append(" - ");
            title.append(listName);
            title.append(" - ");
            String filename = picName;
            if (filename.length() > 20)
                filename = ".." + filename.substring(filename.length() - 20);
            title.append(filename);
        } else {
            title.append(NOPICTURES);
        }
        if (process != null) {
            title.append(" - ");
            title.append(process);
        }
        window.setTitle(title.toString());
    }

    @org.checkerframework.dataflow.qual.Impure
    public void update( TitleInformer this,  IPicList list) {
        listName = list.getName();
        listSize = list.size();
        try {
            picName = list.current().getName();
            picPosition = list.getIndex() + 1;
        } catch (NoSuchElementException e) {
        }
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void clear( TitleInformer this) {
        listName = null;
        picName = null;
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void pushProcess( TitleInformer this,  String info) {
        if (process == info)
            return;
        process = info;
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void finishProcess( TitleInformer this) {
        process = null;
        redraw();
    }
}
