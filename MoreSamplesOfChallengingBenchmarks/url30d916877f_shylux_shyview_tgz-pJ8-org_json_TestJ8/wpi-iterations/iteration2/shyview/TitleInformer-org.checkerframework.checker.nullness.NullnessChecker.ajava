package shyview;

import java.awt.Frame;
import java.util.NoSuchElementException;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class TitleInformer implements IPicInfo {

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String NOPICTURES = "No pictures available";

    @org.checkerframework.dataflow.qual.SideEffectFree
    private TitleInformer() {
    }

    private static @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull TitleInformer _instance;

    @org.checkerframework.dataflow.qual.Impure
    public static @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TitleInformer getInstance() {
        if (_instance == null)
            _instance = new TitleInformer();
        return _instance;
    }

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Frame window;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull String startTitle;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String listName;

     @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int listSize;

     @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int picPosition;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String picName;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String process;

    @org.checkerframework.dataflow.qual.Impure
    public void setFrame(@org.checkerframework.checker.initialization.qual.UnknownInitialization(javax.swing.JFrame.class) @org.checkerframework.checker.nullness.qual.NonNull Frame fr) {
        window = fr;
        startTitle = window.getTitle();
    }

    @org.checkerframework.dataflow.qual.Impure
    private void redraw() {
        StringBuilder title = new StringBuilder();
        title.append(startTitle + " - ");
        if (listName != null && picName != null) {
            title.append(picPosition + "/" + listSize);
            title.append(" - ");
            title.append(listName);
            title.append(" - ");
            String filename = picName;
            if (filename.length() > 20)
                filename = ".." + filename.substring(filename.length() - 20);
            title.append(filename);
        } else {
            title.append(NOPICTURES);
        }
        if (process != null) {
            title.append(" - ");
            title.append(process);
        }
        window.setTitle(title.toString());
    }

    @org.checkerframework.dataflow.qual.Impure
    public void update(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TitleInformer this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull IPicList list) {
        listName = list.getName();
        listSize = list.size();
        try {
            picName = list.current().getName();
            picPosition = list.getIndex() + 1;
        } catch (NoSuchElementException e) {
        }
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void clear(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TitleInformer this) {
        listName = null;
        picName = null;
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void pushProcess(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TitleInformer this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String info) {
        if (process == info)
            return;
        process = info;
        redraw();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void finishProcess(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TitleInformer this) {
        process = null;
        redraw();
    }
}
