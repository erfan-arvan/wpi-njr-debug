@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class IDEX {

    private static   int writeInstr;

    private static   int readInstr;

    //Pipeline Register for ID/EX stage
    private static   int writeOffset;

    private static   int readOffset;

    private static   int writeRegS;

    private static   int readRegS;

    private static   int writeRegT;

    private static   int readRegT;

    private static   int writeRegD;

    private static   int readRegD;

    private static   int writeOpCode;

    private static   int readOpCode;

    private static   int writeFunct;

    private static   int readFunct;

    //control signals
    private static   int WriteRegDst;

    private static   int ReadRegDst;

    private static   int WriteALUOp;

    private static   int ReadALUOp;

    private static   int WriteALUSrc;

    private static   int ReadALUSrc;

    private static   int WriteMemRead;

    private static   int ReadMemRead;

    private static   int WriteMemWrite;

    private static   int ReadMemWrite;

    private static   int WriteMemtoReg;

    private static   int ReadMemtoReg;

    private static   int WriteRegWrite;

    private static   int ReadRegWrite;

    private static   int writeALUcontrol;

    private static   int readALUcontrol;

    private static   int writeReadData1;

    private static   int readReadData1;

    private static   int writeReadData2;

    private static   int readReadData2;

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteReadData1() {
        return writeReadData1;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteReadData1(  int writeReadData1) {
        IDEX.writeReadData1 = writeReadData1;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadReadData1() {
        return readReadData1;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadReadData1(  int readReadData1) {
        IDEX.readReadData1 = readReadData1;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteReadData2() {
        return writeReadData2;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteReadData2(  int writeReadData2) {
        IDEX.writeReadData2 = writeReadData2;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadReadData2() {
        return readReadData2;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadReadData2(  int readReadData2) {
        IDEX.readReadData2 = readReadData2;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteALUcontrol() {
        return writeALUcontrol;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteALUcontrol(  int writeALUcontrol) {
        IDEX.writeALUcontrol = writeALUcontrol;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadALUcontrol() {
        return readALUcontrol;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadALUcontrol(  int readALUcontrol) {
        IDEX.readALUcontrol = readALUcontrol;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegDst() {
        return WriteRegDst;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegDst(  int writeRegDst) {
        WriteRegDst = writeRegDst;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegDst() {
        return ReadRegDst;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegDst(  int readRegDst) {
        ReadRegDst = readRegDst;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteALUOp() {
        return WriteALUOp;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteALUOp(  int writeALUOp) {
        WriteALUOp = writeALUOp;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadALUOp() {
        return ReadALUOp;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadALUOp(  int readALUOp) {
        ReadALUOp = readALUOp;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteALUSrc() {
        return WriteALUSrc;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteALUSrc(  int writeALUSrc) {
        WriteALUSrc = writeALUSrc;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadALUSrc() {
        return ReadALUSrc;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadALUSrc(  int readALUSrc) {
        ReadALUSrc = readALUSrc;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemRead() {
        return WriteMemRead;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemRead(  int writeMemRead) {
        WriteMemRead = writeMemRead;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemRead() {
        return ReadMemRead;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemRead(  int readMemRead) {
        ReadMemRead = readMemRead;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemWrite() {
        return WriteMemWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemWrite(  int writeMemWrite) {
        WriteMemWrite = writeMemWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemWrite() {
        return ReadMemWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemWrite(  int readMemWrite) {
        ReadMemWrite = readMemWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemtoReg() {
        return WriteMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemtoReg(  int writeMemtoReg) {
        WriteMemtoReg = writeMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemtoReg() {
        return ReadMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemtoReg(  int readMemtoReg) {
        ReadMemtoReg = readMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegWrite() {
        return WriteRegWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegWrite(  int writeRegWrite) {
        WriteRegWrite = writeRegWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegWrite() {
        return ReadRegWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegWrite(  int readRegWrite) {
        ReadRegWrite = readRegWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteOffset() {
        return writeOffset;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteOffset(  int writeOffset) {
        IDEX.writeOffset = writeOffset;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadOffset() {
        return readOffset;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadOffset(  int readOffset) {
        IDEX.readOffset = readOffset;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegS() {
        return writeRegS;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegS(  int writeRegS) {
        IDEX.writeRegS = writeRegS;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegS() {
        return readRegS;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegS(  int readRegS) {
        IDEX.readRegS = readRegS;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegT() {
        return writeRegT;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegT(  int writeRegT) {
        IDEX.writeRegT = writeRegT;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegT() {
        return readRegT;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegT(  int readRegT) {
        IDEX.readRegT = readRegT;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegD() {
        return writeRegD;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegD(  int writeRegD) {
        IDEX.writeRegD = writeRegD;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegD() {
        return readRegD;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegD(  int readRegD) {
        IDEX.readRegD = readRegD;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteOpCode() {
        return writeOpCode;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteOpCode(  int writeOpCode) {
        IDEX.writeOpCode = writeOpCode;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadOpCode() {
        return readOpCode;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadOpCode(  int readOpCode) {
        IDEX.readOpCode = readOpCode;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteFunct() {
        return writeFunct;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteFunct(  int writeFunct) {
        IDEX.writeFunct = writeFunct;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadFunct() {
        return readFunct;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadFunct(  int readFunct) {
        IDEX.readFunct = readFunct;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteInstr() {
        return writeInstr;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteInstr(  int writeInstr) {
        IDEX.writeInstr = writeInstr;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadInstr() {
        return readInstr;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadInstr(  int readInstr) {
        IDEX.readInstr = readInstr;
    }
}
