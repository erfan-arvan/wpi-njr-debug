@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class EXMEM {

    //Pipeline Register for EX/MEM stage
    //registers
    private static   int writeRegD;

    private static   int readRegD;

    private static   int writeRegS;

    private static   int readRegS;

    private static   int writeRegT;

    private static   int readRegT;

    private static   int writeOffset;

    private static   int readOffset;

    //instruction
    private static   int writeInstr;

    private static   int readInstr;

    //control signals
    private static   int writeRegWrite;

    private static   int readRegWrite;

    private static   int writeMemRead;

    private static   int readMemRead;

    private static   int writeMemWrite;

    private static   int readMemWrite;

    private static   int writeMemtoReg;

    private static   int readMemtoReg;

    //sets which register will be written to
    private static   int writeWriteRegister;

    private static   int readWriteRegister;

    //result of ALU execution - either addition or subtraction
    private static   int WriteALUresult;

    private static   int ReadALUresult;

    private static   int writeReadData1;

    private static   int readReadData1;

    private static   int writeReadData2;

    private static   int readReadData2;

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteReadData1() {
        return writeReadData1;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteReadData1(  int writeReadData1) {
        EXMEM.writeReadData1 = writeReadData1;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadReadData1() {
        return readReadData1;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadReadData1(  int readReadData1) {
        EXMEM.readReadData1 = readReadData1;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteReadData2() {
        return writeReadData2;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteReadData2(  int writeReadData2) {
        EXMEM.writeReadData2 = writeReadData2;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadReadData2() {
        return readReadData2;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadReadData2(  int readReadData2) {
        EXMEM.readReadData2 = readReadData2;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteOffset() {
        return writeOffset;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteOffset(  int writeOffset) {
        EXMEM.writeOffset = writeOffset;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadOffset() {
        return readOffset;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadOffset(  int readOffset) {
        EXMEM.readOffset = readOffset;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteALUresult() {
        return WriteALUresult;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteALUresult(  int writeALUresult) {
        WriteALUresult = writeALUresult;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadALUresult() {
        return ReadALUresult;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadALUresult(  int readALUresult) {
        ReadALUresult = readALUresult;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteWriteRegister() {
        return writeWriteRegister;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteWriteRegister(  int writeWriteRegister) {
        EXMEM.writeWriteRegister = writeWriteRegister;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadWriteRegister() {
        return readWriteRegister;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadWriteRegister(  int readWriteRegister) {
        EXMEM.readWriteRegister = readWriteRegister;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegWrite() {
        return writeRegWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegWrite(  int writeRegWrite) {
        EXMEM.writeRegWrite = writeRegWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegWrite() {
        return readRegWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegWrite(  int readRegWrite) {
        EXMEM.readRegWrite = readRegWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemRead() {
        return writeMemRead;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemRead(  int writeMemRead) {
        EXMEM.writeMemRead = writeMemRead;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemRead() {
        return readMemRead;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemRead(  int readMemRead) {
        EXMEM.readMemRead = readMemRead;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemWrite() {
        return writeMemWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemWrite(  int writeMemWrite) {
        EXMEM.writeMemWrite = writeMemWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemWrite() {
        return readMemWrite;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemWrite(  int readMemWrite) {
        EXMEM.readMemWrite = readMemWrite;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteMemtoReg() {
        return writeMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteMemtoReg(  int writeMemtoReg) {
        EXMEM.writeMemtoReg = writeMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadMemtoReg() {
        return readMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadMemtoReg(  int readMemtoReg) {
        EXMEM.readMemtoReg = readMemtoReg;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegS() {
        return writeRegS;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegS(  int writeRegS) {
        EXMEM.writeRegS = writeRegS;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegS() {
        return readRegS;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegS(  int readRegS) {
        EXMEM.readRegS = readRegS;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegD() {
        return writeRegD;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegD(  int writeRegD) {
        EXMEM.writeRegD = writeRegD;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegD() {
        return readRegD;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegD(  int readRegD) {
        EXMEM.readRegD = readRegD;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteInstr() {
        return writeInstr;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteInstr(  int writeInstr) {
        EXMEM.writeInstr = writeInstr;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadInstr() {
        return readInstr;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadInstr(  int readInstr) {
        EXMEM.readInstr = readInstr;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getWriteRegT() {
        return writeRegT;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setWriteRegT(  int writeRegT) {
        EXMEM.writeRegT = writeRegT;
    }

    @org.checkerframework.dataflow.qual.Pure
    public static   int getReadRegT() {
        return readRegT;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void setReadRegT(  int readRegT) {
        EXMEM.readRegT = readRegT;
    }
}
