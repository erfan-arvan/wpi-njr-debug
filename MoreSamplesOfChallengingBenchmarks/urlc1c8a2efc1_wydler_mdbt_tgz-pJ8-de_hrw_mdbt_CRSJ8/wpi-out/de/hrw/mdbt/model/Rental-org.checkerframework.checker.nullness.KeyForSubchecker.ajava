package de.hrw.mdbt.model;

import java.util.Date;
import com.db4o.ObjectContainer;
import com.db4o.config.CommonConfigurationProvider;
import com.db4o.ext.Db4oException;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class Rental {

    private  Date startDate;

    private  Date endDate;

    private  Integer startKm = null;

    private  Integer endKm = null;

    private  Vehicle vehicle;

    private  Customer customer;

    private  String status;

    @org.checkerframework.dataflow.qual.Impure
    public Rental( Date start,  Date end,  Vehicle v,  Customer c) {
        setStartDate(start);
        setEndDate(end);
        setVehicle(v);
        setCustomer(c);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Date getStartDate( Rental this) {
        return startDate;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setStartDate( Rental this,  Date startDate) {
        this.startDate = startDate;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Date getEndDate( Rental this) {
        return endDate;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setEndDate( Rental this,  Date endDate) {
        this.endDate = endDate;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int getStartKm() {
        return startKm;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setStartKm(int startKm) {
        this.startKm = startKm;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int getEndKm() {
        return endKm;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setEndKm(int endKm) {
        this.endKm = endKm;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Vehicle getVehicle() {
        return vehicle;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setVehicle( Rental this,  Vehicle vehicle) {
        this.vehicle = vehicle;
        if (this.vehicle != null)
            this.vehicle.removeRental(this);
        this.vehicle = vehicle;
        if (vehicle != null)
            vehicle.addRental(this);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  String getStatus() {
        return status;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setStatus(String status) {
        this.status = status;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Customer getCustomer() {
        return customer;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setCustomer( Rental this,  Customer customer) {
        this.customer = customer;
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void configure(CommonConfigurationProvider config) {
    }

    @org.checkerframework.dataflow.qual.Pure
    public   boolean objectCanNew(ObjectContainer container) throws Db4oException {
        if (this.customer == null)
            throw new Db4oException("Customer cannot be null!");
        if (this.startDate == null)
            throw new Db4oException("Start date cannot be null!");
        if (this.startKm != null)
            if (this.startKm < 0)
                throw new Db4oException("Start KM cannot be smaller 0!");
        if (this.endKm != null)
            if (this.endKm < 0)
                throw new Db4oException("End KM cannot be smaller 0!");
        if (this.vehicle == null)
            throw new Db4oException("Vehicle cannot be null!");
        return true;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  String toString( Rental this) {
        return "--------Rental--------\nFrom " + startDate.toString() + " to " + endDate.toString() + "\nStartKm: " + startKm + " EndKm: " + endKm + "\n----------------------\n";
    }
}
