package Pisteyttaja;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import sitsiplaseeraus.Sitsit;
import sitsiplaseeraus.PaikkaTest;
import sitsiplaseeraus.random.RandomGenerator;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class PisteetTest {

    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull RandomGenerator random;

    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Sitsit sitsit;

    private @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.MonotonicNonNull PaikkaTest sitsaaja;

    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Pisteet pisteet;

    @org.checkerframework.dataflow.qual.SideEffectFree
    public PisteetTest() {
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setUp() {
        this.random = new RandomGenerator();
        this.sitsit = new Sitsit(1);
    }

    @org.checkerframework.dataflow.qual.Impure
    public void testPalautaPisteetToimii() {
        for (int i = 0; i < 1000; i++) {
            double luku = 0.0;
            this.sitsit = new Sitsit(3);
            random.taytaRandomDatalla(30, 30 * 10, this.sitsit);
            this.pisteet = new Pisteet(this.sitsit);
            double pisteet = this.pisteet.palautaPisteet();
            if (pisteet != 0) {
                luku = pisteet;
            }
            assertTrue(this.pisteet.onkoYhteyksia());
            assertTrue(luku != 0.0);
        }
    }
}
