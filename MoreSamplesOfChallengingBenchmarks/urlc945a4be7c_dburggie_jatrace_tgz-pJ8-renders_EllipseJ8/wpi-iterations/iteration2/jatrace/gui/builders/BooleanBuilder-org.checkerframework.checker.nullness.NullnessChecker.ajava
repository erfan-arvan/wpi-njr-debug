package jatrace.gui.builders;

import jatrace.gui.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

//end itemStateChanged()
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class BooleanBuilder extends JPanel implements ItemListener {

    //private JLabel label;
    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull JCheckBox checkbox;

    private  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean selected;

    @org.checkerframework.dataflow.qual.Impure
    public BooleanBuilder(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String descriptor,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean defaultCheck) {
        //super(new GridLayout(1,2));
        super(new BorderLayout());
        setPreferredSize(new Dimension(0, 25));
        //label = new JLabel(descriptor, JLabel.CENTER);
        //add(label);
        checkbox = new JCheckBox(descriptor);
        checkbox.setSelected(defaultCheck);
        selected = defaultCheck;
        add(checkbox, BorderLayout.LINE_START);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean getTrueFalse() {
        return selected;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setSelected( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean b) {
        selected = b;
        checkbox.setSelected(b);
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setText(String t) {
        //label.setText(t);
        checkbox.setText(t);
    }

    @org.checkerframework.dataflow.qual.Impure
    public void itemStateChanged(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull BooleanBuilder this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull ItemEvent e) {
        if (e.getSource() == checkbox) {
            if (e.getStateChange() == ItemEvent.DESELECTED) {
                selected = false;
            } else {
                selected = true;
            }
            setSelected(selected);
        }
        //end if
    }
}
