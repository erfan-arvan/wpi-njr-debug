package minidraw.framework;

import java.awt.event.*;

/**
 * Tool is the Controller role in the MVC pattern for MiniDraw. A
 * tool must process all user input events and translate them into
 * modifications of the Drawing (= model role).
 *
 * The interface follows the schema defined in JHotDraw.
 *
 *   This source code is from the book
 *     "Flexible, Reliable Software:
 *       Using Patterns and Agile Development"
 *     published 2010 by CRC Press.
 *   Author:
 *     Henrik B Christensen
 *     Computer Science Department
 *     Aarhus University
 *
 *   This source code is provided WITHOUT ANY WARRANTY either
 *   expressed or implied. You may study, use, modify, and
 *   distribute it for non-commercial purposes. For any
 *   commercial use, see http://www.baerbak.com/
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public interface Tool {

    /**
     * Handles mouse down events in the drawing view.
     */
    @org.checkerframework.dataflow.qual.Impure
    public void mouseDown(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull MouseEvent e,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int x,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int y);

    /**
     * Handles mouse drag events in the drawing view (mouse button is
     * down).
     */
    @org.checkerframework.dataflow.qual.Impure
    public void mouseDrag(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull MouseEvent e,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int x,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int y);

    /**
     * Handles mouse up in the drawing view.
     */
    @org.checkerframework.dataflow.qual.Impure
    public void mouseUp(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull MouseEvent e,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int x,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int y);

    /**
     * Handles mouse moves (if the mouse button is up).
     */
    @org.checkerframework.dataflow.qual.Impure
    public void mouseMove(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull MouseEvent evt,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int x,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int y);

    /**
     * Handles key down events in the drawing view.
     */
    @org.checkerframework.dataflow.qual.SideEffectFree
    public void keyDown(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull KeyEvent evt,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int key);
}
