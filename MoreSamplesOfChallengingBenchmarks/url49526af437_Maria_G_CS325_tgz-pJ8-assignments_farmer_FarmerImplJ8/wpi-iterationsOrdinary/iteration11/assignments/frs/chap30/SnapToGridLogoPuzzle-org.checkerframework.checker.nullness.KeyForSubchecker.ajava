package assignments.frs.chap30;

import minidraw.standard.*;
import minidraw.framework.*;
import java.awt.*;
import javax.swing.*;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class SnapToGridLogoPuzzle {

    @org.checkerframework.dataflow.qual.Impure
    public static void main(String[] args) {
        final int GRID_ROWS = 3;
        final int GRID_COLUMNS = 3;
        DrawingEditor editor = new MiniDrawApplication("Put the pieces into place - Snap to Grid", new PuzzleFactory());
        editor.open();
        editor.setTool(new SnapToGridSelectionTool(editor, GRID_ROWS, GRID_COLUMNS));
        Drawing drawing = editor.drawing();
        drawing.add(new ImageFigure("11", new Point(5, 5)));
        drawing.add(new ImageFigure("12", new Point(10, 10)));
        drawing.add(new ImageFigure("13", new Point(15, 15)));
        drawing.add(new ImageFigure("21", new Point(20, 20)));
        drawing.add(new ImageFigure("22", new Point(25, 25)));
        drawing.add(new ImageFigure("23", new Point(30, 30)));
        drawing.add(new ImageFigure("31", new Point(35, 35)));
        drawing.add(new ImageFigure("32", new Point(40, 40)));
        drawing.add(new ImageFigure("33", new Point(45, 45)));
    }
}

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
class PuzzleFactory implements Factory {

    @org.checkerframework.dataflow.qual.Pure
    public  DrawingView createDrawingView( PuzzleFactory this,  DrawingEditor editor) {
        DrawingView view = new StdViewWithBackground(editor, "au-seal-large");
        return view;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Drawing createDrawing( PuzzleFactory this,  DrawingEditor editor) {
        return new StandardDrawing();
    }

    @org.checkerframework.dataflow.qual.Pure
    public JTextField createStatusField( PuzzleFactory this,  DrawingEditor editor) {
        return null;
    }
}
