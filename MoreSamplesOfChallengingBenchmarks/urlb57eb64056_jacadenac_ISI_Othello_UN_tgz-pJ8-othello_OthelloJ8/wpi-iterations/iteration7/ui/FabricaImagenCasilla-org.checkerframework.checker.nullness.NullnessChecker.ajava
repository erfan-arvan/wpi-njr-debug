package ui;

import java.awt.Image;
import java.awt.Toolkit;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class FabricaImagenCasilla {

    private static final  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int imagesize = 50;

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image blackDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/negra.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image whiteDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/blanca.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image emptyDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/casillaVacia.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image pssblBlkDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/posibleNegra.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image pssblWhtDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/posibleBlanca.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    private static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image wallDiscImg = Toolkit.getDefaultToolkit().getImage("src/ui/imagenes/muro.png").getScaledInstance(imagesize, imagesize, Image.SCALE_SMOOTH);

    public enum TipoCasilla {

        BLACK,
        WHITE,
        EMPTY,
        PSSBLBLK,
        PSSBLWHT,
        WALL
    }

    @org.checkerframework.dataflow.qual.Pure
    public static @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable ComponenteImagen construirCasilla(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TipoCasilla tipo) {
        switch(tipo) {
            case BLACK:
                return new ComponenteImagen(blackDiscImg);
            case WHITE:
                return new ComponenteImagen(whiteDiscImg);
            case PSSBLBLK:
                return new ComponenteImagen(pssblBlkDiscImg);
            case PSSBLWHT:
                return new ComponenteImagen(pssblWhtDiscImg);
            case EMPTY:
                return new ComponenteImagen(emptyDiscImg);
            case WALL:
                return new ComponenteImagen(wallDiscImg);
            default:
                return null;
        }
    }
}
