package logica.ia.buscadores;

import java.awt.Point;

/**
 * Un resultado de búsqueda consiste en el mapeo de un movimiento al
 * resultado obtenido por el método de evaluación que se eligió.
 *
 * Alternativamente, podríamos mantener una tabla hash movidas/llaves
 * a resultados/valores, pero que en realidad no necesitamos almacenar
 * más el resultado de la búsqueda con el mejor movimiento, al mismo
 * tiempo. Ese mapa tendría siempre un tamańo de 1, pues si fuéramos
 * a insertar una nueva asignación no necesitaríamos todas las anteriores.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class ResultadoBusqueda {

    private  Point punto;

    private   double puntaje;

    @org.checkerframework.dataflow.qual.Pure
    public   double obtenerPuntaje( ResultadoBusqueda this) {
        return puntaje;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Point obtenerPunto( ResultadoBusqueda this) {
        return punto;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  ResultadoBusqueda negado( ResultadoBusqueda this) {
        return new ResultadoBusqueda(punto, -puntaje);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public ResultadoBusqueda( Point punto,   double puntaje) {
        this.punto = punto;
        this.puntaje = puntaje;
    }
}
