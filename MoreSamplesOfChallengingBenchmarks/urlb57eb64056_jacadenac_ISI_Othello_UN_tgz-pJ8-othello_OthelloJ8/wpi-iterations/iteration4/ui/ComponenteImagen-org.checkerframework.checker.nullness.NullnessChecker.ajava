package ui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.MediaTracker;
import javax.swing.JComponent;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class ComponenteImagen extends JComponent {

    private static final  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull long serialVersionUID = 1L;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image imagen;

    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Dimension size;

    @org.checkerframework.dataflow.qual.Impure
    public ComponenteImagen(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Image imagen) {
        super();
        this.imagen = imagen;
        MediaTracker mt = new MediaTracker(this);
        mt.addImage(imagen, 0);
        try {
            mt.waitForAll();
        } catch (InterruptedException e) {
        }
        this.size = new Dimension(imagen.getWidth(null), imagen.getHeight(null));
        this.setSize(size);
    }

    @org.checkerframework.dataflow.qual.Impure
    public void paint(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull ComponenteImagen this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Graphics g) {
        g.drawImage(imagen, 0, 0, this);
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Dimension getPreferredSize(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull ComponenteImagen this) {
        return size;
    }
}
