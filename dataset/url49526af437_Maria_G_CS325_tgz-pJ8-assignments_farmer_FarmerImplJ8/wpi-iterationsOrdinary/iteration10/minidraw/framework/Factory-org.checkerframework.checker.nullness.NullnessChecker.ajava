package minidraw.framework;

import javax.swing.JTextField;

/**
 * Abstract factory for creating implementations of the central
 *    roles used in MiniDraw.
 *
 *    Responsibilities:
 *    1) Create, upon request, instances of the roles that the
 *       DrawingEditor needs.
 *
 *   This source code is from the book
 *     "Flexible, Reliable Software:
 *       Using Patterns and Agile Development"
 *     published 2010 by CRC Press.
 *   Author:
 *     Henrik B Christensen
 *     Computer Science Department
 *     Aarhus University
 *
 *   This source code is provided WITHOUT ANY WARRANTY either
 *   expressed or implied. You may study, use, modify, and
 *   distribute it for non-commercial purposes. For any
 *   commercial use, see http://www.baerbak.com/
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public interface Factory {

    /**
     * Create the drawing view (View role of the MVC pattern).
     * @param editor the editor that the view will be associated with.
     * @return a new drawingview
     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DrawingView createDrawingView(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DrawingEditor editor);

    /**
     * Create the drawing (Model role of the MVC pattern).
     * @param editor the editor that the view will be associated with
     * @return a new drawing
     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Drawing createDrawing(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DrawingEditor editor);

    /**
     * Create the text field used for messages.
     * @param editor the editor that the view will be associated with
     * @return a new status field or null in case no status field is needed.
     */
    @org.checkerframework.dataflow.qual.Impure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable JTextField createStatusField(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DrawingEditor editor);
}
