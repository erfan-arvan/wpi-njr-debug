package minidraw.framework;

import java.awt.*;

/**
 * This interface defines the role of a Figure in a MiniDraw
 *    drawing. Figure instances acts as
 *
 *    Responsibilities:
 *    A) Represent a Figure in the model.
 *    B) Draw itself in a Graphics context.
 *    C) Allow manipulations like moving.
 *    D) Has the Subject role in the observer pattern as a Figure
 *    broadcasts FigureChangeEvents whenever it changes.
 *
 *   This source code is from the book
 *     "Flexible, Reliable Software:
 *       Using Patterns and Agile Development"
 *     published 2010 by CRC Press.
 *   Author:
 *     Henrik B Christensen
 *     Computer Science Department
 *     Aarhus University
 *
 *   This source code is provided WITHOUT ANY WARRANTY either
 *   expressed or implied. You may study, use, modify, and
 *   distribute it for non-commercial purposes. For any
 *   commercial use, see http://www.baerbak.com/
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public interface Figure {

    /**
     * Draws the figure.
     * @param g the Graphics to draw into
     */
    @org.checkerframework.dataflow.qual.Impure
    void draw(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Graphics g);

    /**
     * Return the display box of this figure. The display box is the
     * smallest rectangle that completely contains the figure.
     * @return the display box.
     */
    @org.checkerframework.dataflow.qual.Impure
    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Rectangle displayBox();

    /**
     * Move the figure by a delta (dx, dy) offset from its present
     * position.
     * @param dx amount to move in x
     * @param dy amount to move in y
     */
    @org.checkerframework.dataflow.qual.Impure
    void moveBy( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int dx,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int dy);

    /**
     * Invalidates the figure. This method informs the listeners
     * that the figure's current display box is invalid and should be
     * redrawn.
     */
    @org.checkerframework.dataflow.qual.Impure
    void invalidate();

    /**
     * Informes that a figure has changed its display box.
     * This method also triggers an update call for its
     * registered observers.
     */
    @org.checkerframework.dataflow.qual.Impure
    void changed();

    /**
     * Adds a listener for this figure.
     */
    @org.checkerframework.dataflow.qual.Impure
    void addFigureChangeListener(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull FigureChangeListener l);

    /**
     * Removes a listener for this figure.
     */
    @org.checkerframework.dataflow.qual.Impure
    void removeFigureChangeListener(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull FigureChangeListener l);
}
