package assignments.farmer.seasonstates;

import assignments.farmer.SeasonState;
import assignments.farmer.actionstrategies.*;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class SpringState implements SeasonState {

    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    public void plow(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SpringState this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable PlowStrategy plowStrategy) {
        plowStrategy.plowInTheSpring();
    }

    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    public void plant(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SpringState this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable PlantStrategy plantStrategy) {
        plantStrategy.plantInTheSpring();
    }

    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    public void weedControl(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SpringState this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable WeedControlStrategy weedControlStrategy) {
        weedControlStrategy.weedControlInTheSpring();
    }

    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    public void harvest(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SpringState this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable HarvestStrategy harvestStrategy) {
        harvestStrategy.harvestInTheSpring();
    }

    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    public void market(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull SpringState this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable MarketStrategy marketStrategy) {
        marketStrategy.marketInTheSpring();
    }
}
