package frs.hotgammon.tests.preGuiTests.mariatests;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import frs.hotgammon.common.GameImpl;
import frs.hotgammon.framework.Color;
import frs.hotgammon.variants.movevalidators.SimpleMoveValidator;
import frs.hotgammon.variants.rolldeterminers.PairSequenceDeterminer;
import frs.hotgammon.variants.turndeterminers.AceyDeuceyTurnDeterminer;
import frs.hotgammon.variants.winnerdeterminers.SixMoveWinnerDeterminer;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class DeltaMonTests {

    private  GameImpl game;

    @org.checkerframework.dataflow.qual.Impure
    public void setup() {
        game = new GameImpl(new SimpleMoveValidator(), new SixMoveWinnerDeterminer(), new AceyDeuceyTurnDeterminer(), new PairSequenceDeterminer());
        game.newGame();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void shouldRepeatSamePlayerInTurnIf1_2IsRolled() {
        //1_2
        game.nextTurn();
        assertEquals(Color.BLACK, game.getPlayerInTurn());
        //3_4
        game.nextTurn();
        assertEquals(Color.BLACK, game.getPlayerInTurn());
        //5_6
        game.nextTurn();
        assertEquals(Color.RED, game.getPlayerInTurn());
        //1_2
        game.nextTurn();
        assertEquals(Color.BLACK, game.getPlayerInTurn());
        //3_4
        game.nextTurn();
        assertEquals(Color.BLACK, game.getPlayerInTurn());
        //5_6
        game.nextTurn();
        assertEquals(Color.RED, game.getPlayerInTurn());
    }
}
