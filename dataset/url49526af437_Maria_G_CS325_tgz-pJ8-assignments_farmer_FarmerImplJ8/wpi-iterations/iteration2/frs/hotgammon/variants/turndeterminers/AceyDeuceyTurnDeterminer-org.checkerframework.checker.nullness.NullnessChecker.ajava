package frs.hotgammon.variants.turndeterminers;

import frs.hotgammon.TurnDeterminer;
import frs.hotgammon.framework.Color;
import frs.hotgammon.framework.Game;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class AceyDeuceyTurnDeterminer implements TurnDeterminer {

    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Game game;

    @org.checkerframework.dataflow.qual.SideEffectFree
    public AceyDeuceyTurnDeterminer() {
    }

    @org.checkerframework.dataflow.qual.Impure
    public AceyDeuceyTurnDeterminer(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Game game) {
        this.setGame(game);
    }

    @org.checkerframework.dataflow.qual.Impure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Color nextTurn(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull AceyDeuceyTurnDeterminer this) {
        if (this.game.diceThrown()[0] == 1 && this.game.diceThrown()[1] == 2) {
            return this.game.getPlayerInTurn();
        } else {
            return (this.game.getPlayerInTurn() == Color.BLACK) ? Color.RED : Color.BLACK;
        }
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setGame(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull AceyDeuceyTurnDeterminer this, @org.checkerframework.checker.initialization.qual.UnknownInitialization(java.lang.Object.class) @org.checkerframework.checker.nullness.qual.NonNull Game game) {
        this.game = game;
    }
}
